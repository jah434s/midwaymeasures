@{
    ViewBag.Title = "Home Page";
}


<h1>Web Production Measures</h1>

<div class="row">
    <div class="col-lg-12 result-section">
        <h2>Average Velocity</h2>
        <ul data-velocity-list class="list-unstyled"></ul>
    </div>
    <div class="col-lg-12 result-section">
        <h2>Bug Free Releases</h2>
        <ul data-quality-list class="list-unstyled"></ul>
    </div>
    @*<div class="col-lg-12 result-section">
        <h2>Consistency</h2>
        <ul data-consistency-list class="list-unstyled"></ul>
    </div>*@
</div>
<div class="row">
    <canvas data-chart></canvas>
</div>

<template data-template="result">
    <li class="col-md-4 result-item" data-result-container>
        <h3 data-team class="result-item-title"></h3>
        <strong data-result class="result-item-value"></strong>
        <canvas data-chart></canvas>
    </li>
</template>

@section scripts {
    <script>
        var theTeams = {};

        FB.teams.on('child_added', function(snapshot) {
            var obj = {
                name: snapshot.val().name,
                effort: [],
                cards: [],
                defects: [],
                quality: []
            };
            theTeams[obj.name] = obj;
        });

        FB.teams.on('value', function() {
            $.each(Object.keys(theTeams), function(index, team) {
                FB.iterations.on('child_added', function(snapshot) {

                    theTeams[team].effort.push(snapshot.val()[team].effort || 0);

                    var cards = snapshot.val()[team].cards || 0;
                    if (cards) {
                        theTeams[team].cards.push(Object.keys(snapshot.val()[team].cards).length);
                    } else {
                        theTeams[team].cards.push(0);
                    }

                    var defects = snapshot.val()[team].defects || 0;
                    if (defects) {
                        theTeams[team].defects.push(Object.keys(snapshot.val()[team].defects).length);
                    } else {
                        theTeams[team].defects.push(0);
                    }

                    var totalCards = theTeams[team].cards;
                    var cardsSum = totalCards.reduce(function(a, b) {
                        return a + b;
                    });

                    var totalDefects = theTeams[team].defects;
                    var defectsSum = totalDefects.reduce(function(a, b) {
                        return a + b;
                    });

                    theTeams[team].quality.push(100 - ((defectsSum / cardsSum).toFixed(2) * 100));

                });
            });
        });

        FB.iterations.on('value', function() {
            $.each(Object.keys(theTeams), function(index, teamName) {
                var velocities = theTeams[teamName].effort;
                var velocitySum = velocities.reduce(function(a, b) {
                    return a + b;
                });
                var velocityAvg = (velocitySum / velocities.length).toFixed(2);
                var velocityDisplay = $($('[data-template=result]').html().trim());

                velocityDisplay.find('[data-team]').text('Team ' + teamName);
                velocityDisplay.find('[data-result]').text(velocityAvg);


                var qualities = theTeams[teamName].quality;
                var currentQuality = qualities[qualities.length - 1];
                var qualityDisplay = $($('[data-template=result]').html().trim());

                qualityDisplay.find('[data-team]').text('Team ' + teamName);
                qualityDisplay.find('[data-result]').text(currentQuality + '%');


                $('[data-velocity-list]').append(velocityDisplay);
                $('[data-quality-list]').append(qualityDisplay);

                var chartContainer = $('[data-velocity-list] [data-result-container]:last-child').find('[data-chart]');
                makeChart([velocities], chartContainer, {});
                chartContainer = $('[data-quality-list] [data-result-container]:last-child').find('[data-chart]');
                makeChart([qualities], chartContainer, { scaleOverride: true, scaleSteps: 5, scaleStepWidth: 2, scaleStartValue: 87 });

            });


        });


    </script>
}