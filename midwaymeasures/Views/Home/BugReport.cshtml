@{
    ViewBag.Title = "Bug Report";
}

<h2>@ViewBag.Title</h2>

<form data-bug="form">
    <label>
        Date Introduced (approximate)
        <input type="date" data-bug="date" required />
    </label>
    <label>
        Brief Description
        <textarea data-bug="description" required></textarea>
    </label>
    <fieldset data-bug="people">
        <legend>People Involved</legend>

    </fieldset>
    <label>
        Team
        <select data-team-list required>
            <option></option>
        </select>
    </label>
    <button type="submit" class="btn btn-primary">Submit Bug Report</button>
</form>

@section scripts {
    <script>
        var Bug = function(date, desc, people, team, iteration) {
            this.dateIntroduced = date;
            this.description = desc;
            this.people = people;
            this.team = team;
            this.iteration = iteration;
        }

        //Get People from DB
        FB('people').orderByChild('status').equalTo('active').on('child_added', function(snapshot) {
            var name = snapshot.key();
            $('[data-bug="people"]').append('<label><input type=checkbox data-bug="person">' + name + '</label>');
        });

        //Handle form submission
        $('[data-bug=form]').on('submit', function(e) {
            e.preventDefault();
            var date = Date.parse($('[data-bug=date]').val()),
                desc = $('[data-bug=description]').val(),
                people = {},
                team = $(this).find('[data-team-list]').val();

            $('[data-bug=person]:checked').each(function (index, checkbox) {
                var person = $(checkbox).parents('label').first().text();
                people[person] = true;
            });

            FB('iterations').orderByChild('endDate').startAt(date).limitToFirst(1).once('child_added', function(iterationSnapshot) {
                //FB.iterations.child(iteration.val().endDate).child(defect.val().team).child('defects').update(defectObj, fbCallback);
                var iteration = iterationSnapshot.key();
                var bug = new Bug(date, desc, people, team, iteration);
                //Add defect to the DB
                FB('defects').push(bug, fbCallback);
            });
        });

        FB('defects').limitToLast(1).on('child_added', function(snapshot) {
            var addedBug = snapshot.val(),
                bugRef = {};
            bugRef[snapshot.key()] = true;

            //Add reference to each person
            Object.keys(addedBug.people).forEach(function(name) {
                FB('people').child(name).child('defects').update(bugRef, fbCallback);
            });

            //Add reference to team
            FB('teams').child(addedBug.team).child('defects').update(bugRef, fbCallback);

            //Add reference to iteration
            FB('iterations').child(addedBug.iteration).child(addedBug.team).child('defects').update(bugRef, fbCallback);

        });

        FB('defects').on('child_removed', function(snapshot) {
            var bugKey = snapshot.key(),
                removedBug = snapshot.val();

            //Remove object from each person
            Object.keys(removedBug.people).forEach(function(name) {
                FB('people').child(name).child('defects').child(bugKey).remove();
            });

            //Remove reference from team object
            FB('teams').child(removedBug.team).child('defects').child(bugKey).remove();

            //Remove reference from iteration object
            FB('iterations').child(removedBug.iteration).child(removedBug.team).child('defects').child(bugKey).remove();
        });

        //TODO handle updating of references on child_changed (including deletion of appropriate references)

    </script>
}
